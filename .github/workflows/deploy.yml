name: Production CI/CD Pipeline

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  NODE_VERSION: '18'
  REGISTRY: gcr.io
  PROJECT_ID: secret-proton-465722-q0
  SERVICE_NAME: mindtunnel-resume
  REGION: us-central1
  
jobs:
  # ============================================================================
  # BUILD AND DEPLOY
  # ============================================================================
  deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        
    - name: Install dependencies
      run: npm install
      
    - name: Build application
      run: npm run build
      
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}
        
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      
    - name: Configure Docker for GCR
      run: gcloud auth configure-docker --quiet
      
    - name: Build and push Docker image
      run: |
        IMAGE_TAG="gcr.io/${{ env.PROJECT_ID }}/resume-app:$(date +%Y%m%d)-${GITHUB_SHA::8}"
        docker build -t $IMAGE_TAG .
        docker push $IMAGE_TAG
        echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
        
    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy ${{ env.SERVICE_NAME }} \
          --image=${{ env.IMAGE_TAG }} \
          --platform=managed \
          --region=${{ env.REGION }} \
          --allow-unauthenticated \
          --port=3000 \
          --memory=512Mi \
          --cpu=1 \
          --max-instances=10 \
          --min-instances=0 \
          --set-env-vars="NODE_ENV=production" \
          --project=${{ env.PROJECT_ID }} \
          --quiet
          
    - name: Verify deployment
      run: |
        echo "üéâ Deployment completed!"
        echo "‚úÖ Service: ${{ env.SERVICE_NAME }}"
        echo "‚úÖ Region: ${{ env.REGION }}"
        echo "‚úÖ URL: https://resume.mindtunnel.org"
        echo "‚úÖ Health endpoint: https://resume.mindtunnel.org/api/health"
        
        # Wait for deployment to be ready
        sleep 30
        
        # Test health endpoint
        if curl -f -s https://resume.mindtunnel.org/api/health; then
          echo "‚úÖ Health endpoint is working!"
        else
          echo "‚è≥ Health endpoint not yet available (may take a few minutes)"
        fi
